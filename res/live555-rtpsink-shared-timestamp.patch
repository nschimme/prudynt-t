diff --git a/liveMedia/RTPSink.cpp b/liveMedia/RTPSink.cpp
index e5eabad..a52d05a 100644
--- a/liveMedia/RTPSink.cpp
+++ b/liveMedia/RTPSink.cpp
@@ -21,6 +21,7 @@ along with this library; if not, write to the Free Software Foundation, Inc.,
 #include "RTPSink.hh"
 #include "Base64.hh"
 #include "GroupsockHelper.hh"
+#include <stdlib.h>
 #include <chrono>
 
 // Monotonic time helper function for embedded systems
@@ -189,7 +190,19 @@ RTPSink::RTPSink(UsageEnvironment& env,
 
   fSeqNo = (u_int16_t)our_random();
   fSSRC = our_random32();
-  fTimestampBase = our_random32();
+
+  // PRUDYNT-T PATCH: Use shared timestamp base for A-V sync
+  // Check for environment variable to use shared timestamp base
+  fprintf(stderr, "LIVE555_TIMESTAMP_4_DEBUG: Checking environment variable PRUDYNT_SHARED_TIMESTAMP_BASE\n");
+  char const* sharedTimestampBase = getenv("PRUDYNT_SHARED_TIMESTAMP_BASE");
+  fprintf(stderr, "LIVE555_TIMESTAMP_4_DEBUG: Environment variable value: %s\n", sharedTimestampBase ? sharedTimestampBase : "NULL");
+  if (sharedTimestampBase != NULL) {
+    fTimestampBase = (u_int32_t)strtoul(sharedTimestampBase, NULL, 10);
+    fprintf(stderr, "LIVE555_TIMESTAMP_4_BASE: Using shared timestamp base: %u (0x%08x)\n", fTimestampBase, fTimestampBase);
+  } else {
+    fTimestampBase = our_random32();
+    fprintf(stderr, "LIVE555_TIMESTAMP_4_BASE: Using random timestamp base: %u (0x%08x)\n", fTimestampBase, fTimestampBase);
+  }
 
   fTransmissionStatsDB = new RTPTransmissionStatsDB(*this);
 }
